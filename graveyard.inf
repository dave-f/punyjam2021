! graveyard

Object  GraveyardGate "graveyard gate"
 with   name 'iron' 'graveyard' 'gate',
        description [;
            print "The grand iron gate towers over you.  Through the gate you can see the path splits north and south, taking different routes around the graveyard.";
            if (self has locked)
            {
                print "  It is currently locked.";
            }
            if (IronKey in KeyHook)
            {
                "  You notice on the other side of the gate there's a key on a hook.";
            }
            new_line;
        ],
        before [;
        Unlock: if (second==IronKey)
                { 
                  if (self has open) 
                  {
                     "You would need to close the gate first.";
                  }
                  else
                  {
                    give self ~locked; "The key fits nicely, and unlocks the gate."; 
                  }
                } 
                else { "It doesn't seem to fit."; }
        Lock: if (second==IronKey) 
              {
                if (self has open)
                {
                    "You would need to close the gate first.";
                }
                else
                {
                    give self locked;
                    "You lock the gate.";
                } 
              }
              else { "It doesn't seem to fit."; }
        ],
        found_in PubEast InsideGraveyard,
        door_dir (e_to) (w_to),
        gotKey 0,
 has    door openable lockable locked scenery;

Object InsideGraveyard "Inside the Graveyard"
       with description "Standing at the entrance you get an idea of the size of the graveyard, with paths leading north and south to different areas.  An ornamental bird bath stands in the centre here, and just by the gate is the key hook.",
       w_to PubEast, ! TODO n_to and s_to
       has light;

Object -> BirdBath "bird bath"
       with name 'bird' 'bath',
            description "The ornamental bird bath is a stone cherub holding a dish, which gathers water for the birds when it rains.",
       has scenery;

Object KeyHook "rusty hook"
       with name 'rusty' 'hook',
            description [;
              print "The key hook is rusty and looks like it's been here for a long time.";
              if (IronKey in self)
              {
                print "  An iron key hangs from it.";
              }
              new_line;
            ],
            found_in PubEast InsideGraveyard,
            before [;
             Receive: if (noun==IronKey)
                      {
                         if (real_location==InsideGraveyard)
                         {
                            rfalse;
                         }
                         else
                         {
                            "That's a little awkward.";
                         }
                      }
            ],
       has scenery supporter;

Object -> IronKey "iron key"
       with name 'iron' 'key',
            article "an",
            description "The key is rather large and made of iron.",
            before [;
            Take: if ((self in KeyHook) && (real_location==PubEast)) { "The iron key is out of reach."; } else rfalse;
            ],
            movedFlag 0,
       has scenery;
